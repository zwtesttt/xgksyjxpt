package com.xgksyjxpt.xgksyjxpt.course.mapper.student;

import com.xgksyjxpt.xgksyjxpt.course.domain.student.Student;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface StudentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    int deleteByPrimaryKey(String sid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    int insert(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    int insertSelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    Student selectByPrimaryKey(String sid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    int updateByPrimaryKeySelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_t
     *
     * @mbggenerated Sun Nov 27 14:20:38 CST 2022
     */
    int updateByPrimaryKey(Student record);

    /**
     * 在所有学生账号内查询学生
     * @param id
     * @return
     */
    Student selectStudent(String id);
    /**
     * 查询正常状态的学生
     */
    Student selectNotDelStudent(String id);

    /**
     * 查询所有学生
     * @return
     */
    List<Student> queryAllStudent(@Param("student") Student student,@Param("pageNum") Integer pageNum,@Param("pageSize") Integer pageSize);

    /**
     * 修改学生基本信息
     * @param student
     * @return
     */
    int updateStudent(Student student);

    /**
     * 批量添加学生
     * @param students
     * @return
     */
    int insertStudent(Student[] students);

    /**
     * 添加单个学生
     * @param student
     * @return
     */
    int insertStudentOne(Student student);
    /**
     * 修改学生密码
     */
    int updateStuPass(@Param("sid")String sid, @Param("passwd")String passwd);

    /**
     * 查询学生密码
     */
    String selectStuPass(String sid);

    /**
     * 批量删除学生
     */
    int deleteStudents(String[] stuIds);
    /**
     * 查询学生班级
     */
    List<String> selectStudentClassName();
    /**
     * 按班级名查询学生学号
     */
    List<String> selectStudentIdByClassName(String[] classNames);
    /**
     * 查询学生总数
     */
    int queryStudentCount(Student student);
    /**
     * 查询指定身份的id
     */
    List<String> selectIdentitySid(String identity);
}