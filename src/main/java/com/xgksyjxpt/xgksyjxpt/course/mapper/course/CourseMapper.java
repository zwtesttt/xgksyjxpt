package com.xgksyjxpt.xgksyjxpt.course.mapper.course;

import com.xgksyjxpt.xgksyjxpt.course.domain.course.Course;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    int deleteByPrimaryKey(String cid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    Course selectByPrimaryKey(String cid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_t
     *
     * @mbggenerated Sat Dec 17 21:33:47 CST 2022
     */
    int updateByPrimaryKey(Course record);
    /**
     * 添加课程
     */
    int insertCourse(Course course);
    /**
     * 删除课程
     */
    int deleteCourse(String cid);
    /**
     * 根据课程号查询课程信息
     */
    Course selectCourseByCid(String cid);
    /**
     * 根据教师号查询课程号
     */
    List<String> selectCourseIdByTid(String tid);
    /**
     * 根据多个课程号删除课程
     */
    int deleteCoursesByCids(String[] cids);
    /**
     * 查询所有课程
     */
    List<Course> queryAllCourse(@Param("course") Course course,@Param("pageNum") Integer pageNum,@Param("pageSize") Integer pageSize);
    /**
     * 创建修改课程状态的定时任务
     */
    int createEvent(@Param("date")String date,@Param("cid")String cid,@Param("eventName") String eventName,@Param("courseStatus")String courseStatus);
    /**
     * 删除课程定时任务
     */
    int deleteCourseEvent(String eventName);
    /**
     * 根据老师id查询课程信息
     */
    List<Course> selectCourseByTid(@Param("tid") String tid,@Param("pageNum") Integer pageNum,@Param("pageSize") Integer pageSize);
    /**
     * 修改课程信息
     */
    int updateCourseInfo(Course course);
    /**
     * 查询所有老师总数
     */
    int queryTeacherCount(Course course);

}