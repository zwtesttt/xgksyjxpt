package com.xgksyjxpt.xgksyjxpt.course.mapper.course;

import com.xgksyjxpt.xgksyjxpt.course.domain.course.CourseTest;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CourseTestMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int deleteByPrimaryKey(String test_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int insert(CourseTest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int insertSelective(CourseTest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    CourseTest selectByPrimaryKey(String test_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int updateByPrimaryKeySelective(CourseTest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int updateByPrimaryKeyWithBLOBs(CourseTest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_test_t
     *
     * @mbggenerated Sun Dec 18 16:38:23 CST 2022
     */
    int updateByPrimaryKey(CourseTest record);
    /**
     * 根据课程号删除课程实验
     */
    int deleteCourseTestByCid(String cid);
    /**
     * 根据课程号查询实验id
     */
    List<String> selectCourseTestIdByCid(String cid);

    /**
     * 查询所有实验
     * @return
     */
    List<CourseTest> queryAllCourseTest( @Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
    /**
     * 根据课程号查询实验
     * @return
     */
    List<CourseTest> queryAllCourseTestByCid(@Param("courseTest")CourseTest courseTest, @Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
    /**
     * 添加课程实验
     */
    int insertCourseTest(CourseTest courseTest);
    /**
     * 创建修改实验状态的定时任务
     */
    int createCourseTestEvent(@Param("date")String date,@Param("testId")String testId,@Param("eventName") String eventName,@Param("testStatus")String testStatus);

    /**
     * 修改课程实验
     * @param courseTest
     * @return
     */
    int updateCourseTest(CourseTest courseTest);

    /**
     * 删除课程实验定时任务
     */
    int deleteCourseTestEvent(String eventName);
    /**
     * 根据实验id删除课程实验
     */
    int deleteCourseTestByTestId(String testId);
    /**
     * 根据实验id查询实验信息
     */
    CourseTest selectCourseTestByTestId(String testId);
    /**
     * 根据课程号查询所有实验总数
     */
    int queryCourseCountByCid(@Param("courseTest")CourseTest courseTest);
    /**
     * 批量删除实验
     */
    int deleteCourseTestsByTestIds(String[] ids);
}