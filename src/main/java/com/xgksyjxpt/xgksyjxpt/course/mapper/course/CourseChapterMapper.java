package com.xgksyjxpt.xgksyjxpt.course.mapper.course;

import com.xgksyjxpt.xgksyjxpt.course.domain.course.CourseChapter;
import com.xgksyjxpt.xgksyjxpt.course.domain.course.CourseChapterKey;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CourseChapterMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    int deleteByPrimaryKey(CourseChapterKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    int insert(CourseChapter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    int insertSelective(CourseChapter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    CourseChapter selectByPrimaryKey(CourseChapterKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    int updateByPrimaryKeySelective(CourseChapter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_chapter_t
     *
     * @mbggenerated Sun Dec 18 15:21:05 CST 2022
     */
    int updateByPrimaryKey(CourseChapter record);

    /**
     * 根据课程号删除章节
     * @param cid
     * @return
     */
    int deleteCourseChapterByCid(String cid);

    /**
     * 根据课程号和章节号删除章节
     */
    int deleteCourseChapterByCidAndChapterId(@Param("cid") String cid,@Param("chapterId") Integer chapterId);
    /**
     * 根据课程号添加章节
     */
    int insertCourseChapter(CourseChapter courseChapter);
    /**
     * 根据课程号查询章节
     */
    List<CourseChapter> selectCourseChapter(String cid);
    /**
     * 返回课程章节最大的id
     */
    Integer queryCourseChapterMaxId(String cid);
    /**
     * 修改章节名
     */
    int updateCourseChapter(@Param("cid") String cid,@Param("chapterId") Integer chapterId,@Param("chapterName") String chapterName);

}