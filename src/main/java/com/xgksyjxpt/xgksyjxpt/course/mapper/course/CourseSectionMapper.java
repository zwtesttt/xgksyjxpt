package com.xgksyjxpt.xgksyjxpt.course.mapper.course;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.xgksyjxpt.xgksyjxpt.course.domain.course.CourseSection;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CourseSectionMapper extends BaseMapper<CourseSection> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    int deleteByPrimaryKey(Integer section_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    int insert(CourseSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    int insertSelective(CourseSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    CourseSection selectByPrimaryKey(Integer section_id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    int updateByPrimaryKeySelective(CourseSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course_section_t
     *
     * @mbggenerated Sun Dec 18 15:29:39 CST 2022
     */
    int updateByPrimaryKey(CourseSection record);
    /**
     * 根据课程号和章节号删除课程小节
     */
    int deleteCourseSectionByCidAndChapterId(@Param("cid") String cid,@Param("chapterId") Integer chapterId);
    /**
     * 根据课程号删除课程小节
     */
    int deleteCourseSectionByCid(String cid);
    /**
     * 根据课程号和章节号、小节号删除小节
     */
    int deleteCourseSectionByCidAndChapterIdAndSectionId(@Param("cid") String cid,@Param("chapterId") Integer chapterId,@Param("sectionId")Integer sectionId);
    /**
     * 添加小节
     */
    int insertCourseSectionByCidAndChapterId(CourseSection courseSection);
    /**
     * 查询章节下的的小节标题
     */
    List<CourseSection> selectCourseSectionName(@Param("cid") String cid,@Param("chapterId") Integer chapterId);
    /**
     * 查找指定章节最大小节id
     */
    Integer queryCourseSectionMaxId(@Param("cid") String cid,@Param("chapterId") Integer chapterId);
    /**
     * 查询小节内容
     */
    String queryCourseSectionText(@Param("cid") String cid,@Param("chapterId") Integer chapterId,@Param("sectionId")Integer sectionId);
    /**
     * 修改小节内容
     */
    int updateCourseSectionText(@Param("cid") String cid,@Param("chapterId") Integer chapterId,@Param("sectionId")Integer sectionId,@Param("text") String text);

}